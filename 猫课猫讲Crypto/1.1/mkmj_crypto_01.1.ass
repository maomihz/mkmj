[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: mkmj_crypto_01.1.mp4
Video Zoom Percent: 0.500000
Scroll Position: 98
Active Line: 104

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Down,Yuanti SC,45,&H21FFFFFF,&H000000FF,&H002D1505,&H00CD3604,0,0,0,0,100,100,0,0,1,4.01668,0.2,2,13,13,45,1
Style: Up,Yuanti SC,45,&H21FFFFFF,&H000000FF,&H002D1505,&H00CD3604,0,0,0,0,100,100,0,0,1,4.01668,0.2,8,13,13,45,1
Style: Center,Yuanti SC,45,&H21FFFFFF,&H000000FF,&H002D1505,&H00CD3604,0,0,0,0,100,100,0,0,1,4.01668,0.2,5,13,13,45,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.38,0:00:01.92,Down,,0,0,0,,大家好，我是猫猫
Dialogue: 0,0:00:01.92,0:00:05.62,Down,,0,0,0,,那刚刚我讲了 Hash 函数最基础的知识
Dialogue: 0,0:00:05.62,0:00:09.84,Down,,0,0,0,,那这节小课我来讲一下如何计算 Hash 函数
Dialogue: 0,0:00:09.84,0:00:13.50,Down,,0,0,0,,在 Unix 系统上，包括 Mac OS 和 Linux
Dialogue: 0,0:00:13.50,0:00:17.92,Down,,0,0,0,,上面有一个基本上是预装的命令行软件
Dialogue: 0,0:00:17.92,0:00:19.62,Down,,0,0,0,,可以用来算 Hash
Dialogue: 0,0:00:19.62,0:00:22.00,Down,,0,0,0,,它就是 OpenSSL
Dialogue: 0,0:00:23.78,0:00:28.00,Down,,0,0,0,,OpenSSL 是用来实现 HTTPS / TLS
Dialogue: 0,0:00:28.00,0:00:31.22,Down,,0,0,0,,这样一个常见的开源库
Dialogue: 0,0:00:31.22,0:00:34.28,Down,,0,0,0,,平时上网的时候都少不了 OpenSSL
Dialogue: 0,0:00:34.28,0:00:40.74,Down,,0,0,0,,OpenSSL 的命令行工具就可以用来算各种 Hash
Dialogue: 0,0:00:40.74,0:00:42.26,Down,,0,0,0,,也可以做各种加密
Dialogue: 0,0:00:42.26,0:00:44.08,Down,,0,0,0,,所以用起来是非常方便的
Dialogue: 0,0:00:44.08,0:00:47.14,Down,,0,0,0,,我在这里就用 Mac 来作为演示了
Dialogue: 0,0:00:47.14,0:00:50.64,Down,,0,0,0,,它的命令应该和 Linux 是一样的
Dialogue: 0,0:00:51.92,0:00:55.12,Down,,0,0,0,,我已经准备好了一些文件可以用来算 Hash
Dialogue: 0,0:00:55.12,0:00:59.12,Down,,0,0,0,,所以我们先打开这个文件夹
Dialogue: 0,0:00:59.12,0:01:01.90,Down,,0,0,0,,这里有个 Test 文件夹
Dialogue: 0,0:01:02.56,0:01:07.32,Down,,0,0,0,,看一下这个 Test 文件夹有哪些内容呢
Dialogue: 0,0:01:07.32,0:01:08.88,Down,,0,0,0,,就有这两个文件
Dialogue: 0,0:01:08.88,0:01:11.80,Down,,0,0,0,,我可以告诉你，这两个文件是相同的两个文件
Dialogue: 0,0:01:11.80,0:01:15.06,Down,,0,0,0,,它大概是 11MB 左右的文件
Dialogue: 0,0:01:15.06,0:01:19.38,Down,,0,0,0,,我们可以看相同的文件 Hash 怎么输出
Dialogue: 0,0:01:19.38,0:01:22.38,Down,,0,0,0,,这两个 PDF 是非常特别的 PDF
Dialogue: 0,0:01:22.38,0:01:24.92,Down,,0,0,0,,这就是我已经介绍过的
Dialogue: 0,0:01:24.92,0:01:29.24,Down,,0,0,0,,谷歌用它的计算能力破解出 SHA-1 函数
Dialogue: 0,0:01:29.24,0:01:32.48,Down,,0,0,0,,这样两个碰撞的 PDF
Dialogue: 0,0:01:32.48,0:01:36.06,Down,,0,0,0,,可以看到两个 PDF 它的内容是完全不一样的
Dialogue: 0,0:01:36.06,0:01:38.16,Down,,0,0,0,,背景颜色就不一样
Dialogue: 0,0:01:38.88,0:01:41.96,Down,,0,0,0,,那我们就先启动 Terminal
Dialogue: 0,0:01:42.92,0:01:46.06,Down,,0,0,0,,这就是我们的 Terminal
Dialogue: 0,0:01:46.06,0:01:50.80,Down,,0,0,0,,如果要验证 OpenSSL 安装，就直接输入 {\fnMonaco}openssl{\fn}
Dialogue: 0,0:01:51.90,0:01:54.92,Down,,0,0,0,,可以看到 OpenSSL 进入了命令模式
Dialogue: 0,0:01:51.90,0:01:56.92,Up,,0,0,0,,OpenSSL 的命令模式可以运行我之后要讲的所有命令 省略开头的 {\fnMonaco}openssl{\fn}
Dialogue: 0,0:01:54.92,0:01:58.00,Down,,0,0,0,,那么我们暂时不进入命令模式
Dialogue: 0,0:01:58.00,0:02:00.00,Down,,0,0,0,,用 Ctrl+D 退出
Dialogue: 0,0:01:58.00,0:02:03.00,Up,,0,0,0,,Ctrl+D 在命令行中的作用就是输入一个 EOF 文件终止符
Dialogue: 0,0:02:00.00,0:02:02.46,Down,,0,0,0,,那么如何用 OpenSSL 来计算呢
Dialogue: 0,0:02:02.46,0:02:06.30,Down,,0,0,0,,首先看一下，这几个文件都在这个目录下
Dialogue: 0,0:02:06.30,0:02:08.80,Down,,0,0,0,,要计算某个文件的 Hash 呢，我们就打
Dialogue: 0,0:02:08.80,0:02:11.76,Down,,0,0,0,,{\fnMonaco}openssl dgst{\fn}
Dialogue: 0,0:02:11.76,0:02:14.12,Down,,0,0,0,,dgst 的意思就是 Digest
Dialogue: 0,0:02:14.12,0:02:17.70,Down,,0,0,0,,Digest 命令，接下去要指定一个算法
Dialogue: 0,0:02:17.70,0:02:19.58,Down,,0,0,0,,{\fnMonaco}-md5{\fn}
Dialogue: 0,0:02:19.58,0:02:21.82,Down,,0,0,0,,{\fnMonaco}bin1{\fn}
Dialogue: 0,0:02:21.82,0:02:25.12,Down,,0,0,0,,可以看到，这个 MD5 值就算出来了
Dialogue: 0,0:02:25.52,0:02:28.24,Down,,0,0,0,,那么也可以改一下
Dialogue: 0,0:02:28.24,0:02:30.58,Down,,0,0,0,,算一下 bin2 的 MD5
Dialogue: 0,0:02:30.58,0:02:33.34,Down,,0,0,0,,可以看到这两个文件我告诉你是相同的
Dialogue: 0,0:02:33.34,0:02:35.24,Down,,0,0,0,,所以它们输出了相同的 MD5
Dialogue: 0,0:02:35.24,0:02:39.66,Down,,0,0,0,,OpenSSL 也可以输出多个文件的 Hash
Dialogue: 0,0:02:39.66,0:02:42.12,Down,,0,0,0,,用星号来代替
Dialogue: 0,0:02:42.12,0:02:46.88,Down,,0,0,0,,这样就同时输出了 bin1 和 bin2 两个的 MD5
Dialogue: 0,0:02:47.42,0:02:52.24,Down,,0,0,0,,那接下去算一下目录下所有的文件
Dialogue: 0,0:02:52.84,0:02:55.44,Down,,0,0,0,,可以看到这两个文件是相同的
Dialogue: 0,0:02:55.44,0:02:58.10,Down,,0,0,0,,那么这两个文件是不同的
Dialogue: 0,0:02:58.10,0:03:01.94,Down,,0,0,0,,因为它们的 MD5 值都是不一样的
Dialogue: 0,0:03:03.26,0:03:07.30,Down,,0,0,0,,那我们用其他算法也来算一下这里面的 Hash 值
Dialogue: 0,0:03:07.30,0:03:09.04,Down,,0,0,0,,我们用 SHA-1
Dialogue: 0,0:03:09.04,0:03:11.38,Down,,0,0,0,,先不用 SHA-1，用SHA-256
Dialogue: 0,0:03:11.38,0:03:14.26,Down,,0,0,0,,SHA-256 我们看一下结果是怎样的
Dialogue: 0,0:03:14.26,0:03:17.50,Down,,0,0,0,,SHA-256 呢比 MD5 稍微慢一点
Dialogue: 0,0:03:17.50,0:03:19.54,Down,,0,0,0,,但是它的结果是一样的
Dialogue: 0,0:03:19.54,0:03:23.84,Down,,0,0,0,,bin1 和 bin2 这两个 Hash 值是相同的
Dialogue: 0,0:03:23.84,0:03:25.42,Down,,0,0,0,,这两个是不同的
Dialogue: 0,0:03:25.90,0:03:29.64,Down,,0,0,0,,我刚才说了，这两个 PDF 是用来
Dialogue: 0,0:03:29.64,0:03:31.78,Down,,0,0,0,,创造 SHA-1 碰撞的
Dialogue: 0,0:03:31.78,0:03:35.40,Down,,0,0,0,,那就试试看 如何算 SHA-1
Dialogue: 0,0:03:37.38,0:03:39.62,Down,,0,0,0,,可以看到这两个相同的文件呢
Dialogue: 0,0:03:39.62,0:03:42.10,Down,,0,0,0,,输出的 SHA-1 都是一样的
Dialogue: 0,0:03:42.10,0:03:43.72,Down,,0,0,0,,但这两个不同的文件
Dialogue: 0,0:03:43.72,0:03:45.44,Down,,0,0,0,,也输出了同样的 SHA-1
Dialogue: 0,0:03:45.44,0:03:49.76,Down,,0,0,0,,我们可以通过其他的 Hash 函数来判断这两个是不同的文件
Dialogue: 0,0:03:49.76,0:03:54.28,Down,,0,0,0,,但是在 SHA-1 下，这两个输出了相同的 Hash
Dialogue: 0,0:03:54.28,0:03:56.40,Down,,0,0,0,,那就说明这两个
Dialogue: 0,0:03:56.40,0:03:58.10,Down,,0,0,0,,是对 SHA-1 的一个碰撞
Dialogue: 0,0:03:58.10,0:04:00.58,Down,,0,0,0,,接下来呢我们再来算一下
Dialogue: 0,0:04:00.58,0:04:03.98,Down,,0,0,0,,我来演示一下雪崩效应到底是什么
Dialogue: 0,0:04:03.98,0:04:07.30,Down,,0,0,0,,我们在 bin2 这个文件的末尾
Dialogue: 0,0:04:07.30,0:04:08.28,Down,,0,0,0,,加一个字符
Dialogue: 0,0:04:08.28,0:04:13.50,Down,,0,0,0,,{\fnMonaco}echo 1 >> bin2
Dialogue: 0,0:04:13.50,0:04:17.38,Down,,0,0,0,,然后再算一下它们的 SHA-256
Dialogue: 0,0:04:22.44,0:04:25.26,Down,,0,0,0,,可以看到这个是它原始的 SHA-2
Dialogue: 0,0:04:25.26,0:04:27.76,Down,,0,0,0,,我只不过在第二个文件里面
Dialogue: 0,0:04:27.76,0:04:33.60,Down,,0,0,0,,在最后增加了很小很小的一点点内容
Dialogue: 0,0:04:33.60,0:04:37.38,Down,,0,0,0,,它的 SHA-256 就和上面完全不一样
Dialogue: 0,0:04:37.38,0:04:41.38,Down,,0,0,0,,这就是所谓的雪崩效应，Avalanche Effect
Dialogue: 0,0:04:42.40,0:04:48.22,Down,,0,0,0,,OpenSSL 也可以算纯文本的 Hash
Dialogue: 0,0:04:48.22,0:04:58.26,Down,,0,0,0,,{\fnMonaco}echo test | openssl dgst -sha256
Dialogue: 0,0:04:58.26,0:05:00.74,Down,,0,0,0,,这时候算出来的 Hash 呢
Dialogue: 0,0:05:00.74,0:05:07.34,Down,,0,0,0,,就是前面命令输出的一段文本算出来的 Hash
Dialogue: 0,0:05:07.34,0:05:11.88,Down,,0,0,0,,那么 echo 命令在末尾有一个换行符
Dialogue: 0,0:05:11.88,0:05:15.82,Down,,0,0,0,,假如你要 "test" 这四个字符算 Hash 的话
Dialogue: 0,0:05:15.82,0:05:17.06,Down,,0,0,0,,你可以用 printf
Dialogue: 0,0:05:17.06,0:05:29.18,Down,,0,0,0,,{\fnMonaco}printf test | openssl dgst -sha256
Dialogue: 0,0:05:29.18,0:05:31.80,Down,,0,0,0,,这样算，可以看到这两个 Hash 是不一样的
Dialogue: 0,0:05:31.80,0:05:35.50,Down,,0,0,0,,因为这个 test 里面多了一个换行符
Dialogue: 0,0:05:35.50,0:05:37.50,Down,,0,0,0,,这个没有多换行符
Dialogue: 0,0:05:37.50,0:05:40.16,Down,,0,0,0,,那么 OpenSSL 呢也有些捷径
Dialogue: 0,0:05:40.16,0:05:41.82,Down,,0,0,0,,{\fnMonaco}openssl
Dialogue: 0,0:05:41.82,0:05:44.78,Down,,0,0,0,,你可以直接打 md5
Dialogue: 0,0:05:45.54,0:05:46.88,Down,,0,0,0,,这是捷径
Dialogue: 0,0:05:46.88,0:05:50.76,Down,,0,0,0,,{\fnMonaco}md5
Dialogue: 0,0:05:50.76,0:05:52.92,Down,,0,0,0,,那么特别要注意的是什么呢
Dialogue: 0,0:05:52.92,0:05:56.04,Down,,0,0,0,,假如你打 {\fnMonaco}openssl dgst {\fn}的话
Dialogue: 0,0:05:56.04,0:06:00.28,Down,,0,0,0,,后面指定算法千万不要忘了这个 -（-md5）
Dialogue: 0,0:06:00.28,0:06:03.20,Down,,0,0,0,,假如没有 - 这个命令是运行不起来的
Dialogue: 0,0:06:03.20,0:06:08.04,Down,,0,0,0,,SHA-1 也是可以用快捷的方法计算的
Dialogue: 0,0:06:08.04,0:06:10.58,Down,,0,0,0,,那么 SHA-256 呢就没有了
Dialogue: 0,0:06:12.08,0:06:15.02,Down,,0,0,0,,可以看到这段命令是运行不了的
Dialogue: 0,0:06:16.50,0:06:21.34,Down,,0,0,0,,那么这段命令呢其实输出了 openssl 所有的命令
Dialogue: 0,0:06:21.34,0:06:23.04,Down,,0,0,0,,大家可以仔细看一下
Dialogue: 0,0:06:23.04,0:06:27.90,Down,,0,0,0,,这些命令其实是不全的
Dialogue: 0,0:06:27.90,0:06:31.80,Down,,0,0,0,,具体还是要参照 OpenSSL 的手册
Dialogue: 0,0:06:31.80,0:06:33.80,Down,,0,0,0,,
